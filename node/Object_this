Object.assign({},...sources) //拷贝
Object.assign({},...sources1,...sources2)//合并对象
Object.keys() 返回一个包含所有给定对象自身可枚举属性名称的数组
Object.values(obj)方法返回一个给定对象自己的所有可枚举属性值的数组 var obj = { foo: "bar", baz: 42 }; console.log(Object.values(obj)); // ['bar', 42]
Object.entries() 方法返回一个给定对象自身可枚举属性的键值对数组 const object1 = { foo: 'bar', baz: 42 };console.log(Object.entries(object1)[1]);// expected output: Array ["baz", 42]
java中的instanceof运算符是用来在运行时指出对象是否是特定类的一个实例。如：result=object instanceof class

let version=['0.9.6.7.8.3', '1.6.3', '0.10.6.5', '0.8.5', '0.10.6.7']
version(version, maxLength) {
    let result = []
    for (let i = 0; i < maxLength; i++) {
      let forVsersion = (result.length === 0 ? version : result)
      result = []
      for (let j = 0; j < forVsersion.length; j++) {
        if (result.length === 0) {
          result.push(forVsersion[j])
        } else if (result[0][i].toNumber() < forVsersion[j][i].toNumber()) {
          result = []
          result.push(forVsersion[j])
        } else if (result[0][i].toNumber() === forVsersion[j][i].toNumber()) {
          result.push(forVsersion[j])
        }
      }
    }
    return result[0]
  }

数组：
.join()组合数组  a=[1,3,5]==>a.join():1,2,5  a=[1,e,3]:a.join('/')==>1/e/3

作用域：
apply()/call()/bind()修改作用域；
new A();//作用域是当前类
apply：调用一个对象的一个方法，用另一个对象替换当前对象。例如：B.apply(A, arguments);即A对象应用B对象的方法。

call：调用一个对象的一个方法，用另一个对象替换当前对象。例如：B.call(A, args1,ar
象调用B对象的方法。



⚠️ for...in 与 for循环：最好不要用for in循环数组,因为它总是会访问该对象的原型,看下原型上是否有属性,这在无意中就给遍历增加了额外的压力。

for 循环中用continue终止当前操作并开始下一个for中操作
    break跳出当前for

while：break：跳出循环体；continue：结束当前循环，开始下一次迭代；return：跳出函数
